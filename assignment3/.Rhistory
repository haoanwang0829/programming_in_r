library(datasets)
data(iris)
ï¼Ÿiris
?iris
iris$Sepal.Length
mean(iris$Sepal.Length)
iris[iris$Species == 'virginica']
iris[which(iris$Species == 'virginica'),]
iris[which(iris$Species == 'virginica'),]$Sepal.Length
mean(iris[which(iris$Species == 'virginica'),]$Sepal.Length)
apply(iris[, 1:4], 2, mean)
clear
clear()
reset
reset()
library(datasets)
data(mtcars)
?mtcars
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
mv <- makeVector()
mv
mv.set(2)
mv$set(2)
mv
mv$get()
mv$set(2,3,4,5)
mv$set(vector(1,2,3))
mv$set(list(1,2,3))
mv$get()
mv$getmean()
mv$setmean()
mv$setmean(1)
mv$getmean(1)
mv$getmean()
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(mv)
mv <- list(2,3,4,5,6)
cachemean(mv)
mv <- makeVector(mv)
cachemean(mv)
mean()
mean(list(1,2,3,4))
mean(c(1,2,3,4))
mv <- c(2,3,4,5,6)
cachemean(mv)
mv <- makeVector(mv)
cachemean(mv)
mv.get()
nv$get()
mv$get()
kk <- c(1,2,3,4)
mk <- makeVector(kk)
catchemean(mk)
cachemean(mk)
h <- 5
makeVector(h)
mp <- makeVector()
mp$set(3)
mp$set(4)
mp$get()
mk
s
mk
cat("\014")
mk
mk
rm(list = ls())
mk
A <- matrix( c(5, 1, 0,
3,-1, 2,
4, 0,-1), nrow=3, byrow=TRUE)
det(A)
inv(A)
solve(A)
solve(A)%*%A
A
mA <- makeCacheMatrix(A)
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
cacheSolve <- function(x, ...) {
m <- x$getinverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data)
x$setinverse(m)
m
}
mA <- makeCacheMatrix(A)
mA.get()
mA$get()
mA$get()
mA
mA$getinverse()
cacheSolve(mA)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome_list <- vector(mode="list", length=3)
names(outcome_list) <- c("heart attack","heart failure","pneumonia")
getwd()
setwd("C:/Users/wangh/Documents/R/assignment3")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome_list <- vector(mode="list", length=3)
names(outcome_list) <- c("heart attack","heart failure","pneumonia")
outcome_list[[1]] <- 11; outcome_list[[2]] <- 17; outcome_list[[3]] <- 23
col_index <- outcome_list[[outcome]]
statedata <- data[, c(2,7,col_index)]
statedata[, 3] <- as.numeric(x=statedata[, 3])
statedata <- statedata[complete.cases(statedata), ]
outcome_list[[1]] <- 11; outcome_list[[2]] <- 17; outcome_list[[3]] <- 23
col_index <- outcome_list[[outcome]]
outcome <- "heart attack"
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome_list <- vector(mode="list", length=3)
names(outcome_list) <- c("heart attack","heart failure","pneumonia")
outcome_list[[1]] <- 11; outcome_list[[2]] <- 17; outcome_list[[3]] <- 23
col_index <- outcome_list[[outcome]]
statedata <- data[, c(2,7,col_index)]
statedata[, 3] <- as.numeric(x=statedata[, 3])
statedata <- statedata[complete.cases(statedata), ]
statelist <- sort(unique(statedata$State))
statelist
state<-'CA'
temp <- statedata[statedata$State == state,]
NUM
num
num<-20
target<-temp[order(temp[,3], statedata[,1]),][num,1]
target<-temp[order(temp[,3], temp[,1]),][num,1]
target
rankall <- function(outcome, num = 'best'){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome_list <- vector(mode="list", length=3)
names(outcome_list) <- c("heart attack","heart failure","pneumonia")
if(outcome %in% names(outcome_list) == FALSE) stop("invalid outcome")
outcome_list[[1]] <- 11; outcome_list[[2]] <- 17; outcome_list[[3]] <- 23
col_index <- outcome_list[[outcome]]
statedata <- data[, c(2,7,col_index)]
statedata[, 3] <- as.numeric(x=statedata[, 3])
statedata <- statedata[complete.cases(statedata), ]
if(num == 'best') num <- 1
if(num == 'worst') num <- dim(statedata)[1]
output <- list()
statelist <- sort(unique(statedata$State))
for(state in statelist){
temp <- statedata[statedata$State == state,]
target<-temp[order(temp[,3], temp[,1]),][num,1]
output <- rbind(output, list(target, state))
}
output
}
rankall(("heart attack", 20)
rankall("heart attack", 20)
rankall <- function(outcome, num = 'best'){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome_list <- vector(mode="list", length=3)
names(outcome_list) <- c("heart attack","heart failure","pneumonia")
if(outcome %in% names(outcome_list) == FALSE) stop("invalid outcome")
outcome_list[[1]] <- 11; outcome_list[[2]] <- 17; outcome_list[[3]] <- 23
col_index <- outcome_list[[outcome]]
statedata <- data[, c(2,7,col_index)]
statedata[, 3] <- as.numeric(x=statedata[, 3])
statedata <- statedata[complete.cases(statedata), ]
if(num == 'best') num <- 1
if(num == 'worst') num <- dim(statedata)[1]
output <- list()
statelist <- sort(unique(statedata$State))
for(state in statelist){
temp <- statedata[statedata$State == state,]
target<-temp[order(temp[,3], temp[,1]),][num,1]
output <- rbind(output, list(target, state))
}
names(output) <- c('hospital','state')
output
}
rankall("heart attack", 20)
rankall <- function(outcome, num = 'best'){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome_list <- vector(mode="list", length=3)
names(outcome_list) <- c("heart attack","heart failure","pneumonia")
if(outcome %in% names(outcome_list) == FALSE) stop("invalid outcome")
outcome_list[[1]] <- 11; outcome_list[[2]] <- 17; outcome_list[[3]] <- 23
col_index <- outcome_list[[outcome]]
statedata <- data[, c(2,7,col_index)]
statedata[, 3] <- as.numeric(x=statedata[, 3])
statedata <- statedata[complete.cases(statedata), ]
if(num == 'best') num <- 1
if(num == 'worst') num <- dim(statedata)[1]
output <- list()
statelist <- sort(unique(statedata$State))
for(state in statelist){
temp <- statedata[statedata$State == state,]
target<-temp[order(temp[,3], temp[,1]),][num,1]
output <- rbind(output, list(target, state))
}
output
}
rankall("heart attack", 20)
names(rankall("heart attack", 20))
typeof(rankall("heart attack", 20))
